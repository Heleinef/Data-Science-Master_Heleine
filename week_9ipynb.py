# -*- coding: utf-8 -*-
"""Week 9ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fSEDpoWtVlrcUklhRMldUj9whFSnPRES

**Introduction**

What explains the extraordinary high level of private wealth accumulated by some individuals or families in our contemporary world?

In order to explore possible answers to this research question, the present analysis uses *Billionaires Statistics Dataset*  imported from Kaggle : https://www.kaggle.com/datasets/endofnight17j03/billionaires-statistics-dataset?resource=download

The data set contains 2640 observations (or rows) and has 35 categories (columns). Our research question aims at finding the social, structural, cultural and economic factors or shifts  that can explain the unparalleled accumulation of wealth achieved by a handful of individuals or families from specific geographic regions and sometimes within less than a generation, since the second half of the 20th century.

**Data Exploration**
"""

import pandas as pd
billionaires_statistics = pd.read_csv("https://raw.githubusercontent.com/Heleinef/Data-Science-Master_Heleine/main/Billionaires%20Statistics%20Dataset.csv")
df = billionaires_statistics
print(df)

# Display the 5 first rows of the DataFrame
df.head()

# Display the last 3 rows of the DataFrame
df.tail(3)

# Display a summary of the DataFrame
df.info()

#  Summary Statistics: Display the basic statistical details of the DataFrame
df.describe()

"""**Data Wrangling**"""

# Checking for missing values
df.isnull().sum()

# Dropping rows with missing values
df_cleaned = df.dropna()
print(df_cleaned)

"""Selecting the first 6 columns of my DataFrame"""

# Selecting the first six columns of the DataFrame
import pandas as pd

df_small = df_cleaned.iloc[:, :6]

# Displaying the selected columns
print(df_small)

import pandas as pd


# Selecting specific columns by label
df_small = df_cleaned[["rank", "finalWorth", "category", "personName", "age", "country", "population_country","gross_primary_education_enrollment_country", "life_expectancy_country", "gdp_country"]]
df_small

# Selecting the first 15 rows of df_small
import pandas as pd


df_small = df_small.head(15)

# Displaying the filtered DataFrame
print(df_small)

# Renaming several columns in df_small
df_new = df_small.rename(columns={
    "rank": "Rank","personName": "Person_Name",  "category": "Industry",
    "finalWorth": "Worth",
    "age": "Age",
    "country": "Country",
    "population_country": "Population","gross_primary_education_enrollment_country": "Primary_education",
    "life_expectancy_country": "Life_expectancy",
    "gdp_country": "GDP"
})

# Display the DataFrame with renamed columns
print(df_new)

# Filtering Rows
# Industries worth above $100000 billions
filtered_data = df_new[(df_new["Worth"] > 100000) ]
print(filtered_data )

# Filtering Rows
# Industries worth above 50000 billion dollars
filtered_data = df_new[(df_new["Worth"] > 50000) ]
print(filtered_data )

# Grouping data by column to calculate the mean in wealth
grouped_data = df_new.groupby("Worth").mean()
print(grouped_data)

# Grouping data by column to calculate the mean in countries life expectancy
grouped_data = df_new.groupby("Life_expectancy").mean()
print(grouped_data)

# Mean primary education
grouped_data = df_new.groupby("Primary_education").mean()
print(grouped_data)

# Mean GDP
grouped_data = df_new.groupby("GDP").mean()
print(grouped_data)

# Adding a new clumn to the DataFrame: the rate
df_new['rate'] = df_new['Worth'].pct_change() * 100
print(df_new)

"""**Data Visualization**

"""

# Scatter plot
# @title Worth vs Age

from matplotlib import pyplot as plt
df_new.plot(kind='scatter', x='Worth', y='Age', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# Bar plot
# @title Wealth Ranking by Industry

from matplotlib import pyplot as plt
import seaborn as sns
df_new.groupby('Industry').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

# Violin plot
# @title Industry vs Worth

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df_new['Industry'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df_new, x='Worth', y='Industry', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

# Violin plot
# @title Industry vs a person's Ranking

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df_new['Industry'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df_new, x='Rank', y='Industry', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

# Line plot
# @title Rank vs Age

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['Rank']
  ys = series['Age']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = df_new.sort_values('Rank', ascending=True)
for i, (series_name, series) in enumerate(df_sorted.groupby('Industry')):
  _plot_series(series, series_name, i)
  fig.legend(title='Industry', bbox_to_anchor=(1, 1), loc='upper left')
sns.despine(fig=fig, ax=ax)
plt.xlabel('Rank')
_ = plt.ylabel('Age')

# Violin plot
# @title Industry vs Age

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df_new['Industry'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df_new, x='Age', y='Industry', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

# Violin plot
# @title Industry vs Worth

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df_new['Industry'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df_new, x='Worth', y='Industry', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

# @title Population vs Worth

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['Population']
  ys = series['Worth']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = df_new.sort_values('Population', ascending=True)
for i, (series_name, series) in enumerate(df_sorted.groupby('Industry')):
  _plot_series(series, series_name, i)
  fig.legend(title='Industry', bbox_to_anchor=(1, 1), loc='upper left')
sns.despine(fig=fig, ax=ax)
plt.xlabel('Population')
_ = plt.ylabel('Worth')

# @title GDP vs Worth

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['GDP']
  ys = series['Worth']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = df_new.sort_values('GDP', ascending=True)
for i, (series_name, series) in enumerate(df_sorted.groupby('Industry')):
  _plot_series(series, series_name, i)
  fig.legend(title='Industry', bbox_to_anchor=(1, 1), loc='upper left')
sns.despine(fig=fig, ax=ax)
plt.xlabel('GDP')
_ = plt.ylabel('Worth')

# Violin plot
# @title GDP vs Worth

from matplotlib import pyplot as plt
import seaborn as sns
figsize = (12, 1.2 * len(df_new['GDP'].unique()))
plt.figure(figsize=figsize)
sns.violinplot(df_new, x='Worth', y='GDP', inner='stick', palette='Dark2')
sns.despine(top=True, right=True, bottom=True, left=True)

"""**Findings and conclusion**

---

The following are the main findings of our analysis as illustrated by the various plots and graphs. Note that no inferential statistics were conducted in order to further refine the prelimary findings shared below:

1. Technology and tech-related fields are the primary and top generators of wealth, immediatelly followed by fashion and retail
2. Tech is also the area where one find the youngest and often self - made billionaires as opposed to Fashion and Retail
3. Older billionaires (70 and 80 of age) are found in the retail and fashion fields
4. Top ranking billionaires seems to be above the age of 60 and many of them are in the fashion and retail fields
5. There seems to be a relationship between  GPD and billionaire worth , especialliares those worth between 50 billions and 100 billions. However that relationship dwindles as the person's worth gets above 150 billions.
"""